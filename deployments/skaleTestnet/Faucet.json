{
  "address": "0x91119C6AdA227c150C882381f1D5C06d483D8E1D",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_ruby",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_usdp",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_usdc",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_usdt",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_dai",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINT_AMOUNT_ETH",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MINT_AMOUNT_TOKEN_18",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MINT_AMOUNT_TOKEN_6",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dai",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ruby",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "usdc",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "usdp",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "usdt",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x4d3a6f31b606c6269ce4fe9277afb9cb17f620cf6d33d9b8339207c673da2c23",
  "receipt": {
    "to": "0x0000000000000000000000000000000000000000",
    "from": "0xF63Bb14E7E9bD2882957129c3E3197E6D18933B4",
    "contractAddress": "0x91119C6AdA227c150C882381f1D5C06d483D8E1D",
    "transactionIndex": 0,
    "gasUsed": "934573",
    "logsBloom": "0x
    "blockHash": "0x562d08379a8fa4b257d061e470201f16e0aa0d98e3199ef867b485ff26cac25c",
    "transactionHash": "0x4d3a6f31b606c6269ce4fe9277afb9cb17f620cf6d33d9b8339207c673da2c23",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 1563985,
        "transactionHash": "0x4d3a6f31b606c6269ce4fe9277afb9cb17f620cf6d33d9b8339207c673da2c23",
        "address": "0x91119C6AdA227c150C882381f1D5C06d483D8E1D",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f63bb14e7e9bd2882957129c3e3197e6d18933b4"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x562d08379a8fa4b257d061e470201f16e0aa0d98e3199ef867b485ff26cac25c"
      }
    ],
    "blockNumber": 1563985,
    "cumulativeGasUsed": "934573",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x58F2b35dde559F49B9870Ec101c3b1B8433C644d",
    "0x0EB4a542fcCBe6c985Eaa08e7A5De0f27cb50938",
    "0x788c12145E5E15717020095172d3471Fd6C0569f",
    "0x9DBFcCd94c26cd219b60754215abcC32c26F41c2",
    "0x059Fc87C315c659Bc11B0F7F524d20413A4A0fAC"
  ],
  "numDeployments": 1,
  "solcInputHash": "9950b26e12960fc1e3d82256d0e9aeed",
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ruby\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdp\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdc\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdt\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_dai\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINT_AMOUNT_ETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINT_AMOUNT_TOKEN_18\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINT_AMOUNT_TOKEN_6\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dai\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ruby\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdc\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdp\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/faucet/Faucet.sol\":\"Faucet\"},\"evmVersion\":\"istanbul\",\"libraries\":{\"__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () internal {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x15e2d5bd4c28a88548074c54d220e8086f638a71ed07e6b3ba5a70066fcf458d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address payable) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\"},\"contracts/faucet/Faucet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\npragma solidity 0.6.12;\\n\\ncontract Faucet is Ownable {\\n\\n    uint256 public constant MINT_AMOUNT_ETH = 0.3 ether;\\n\\n    uint256 public constant MINT_AMOUNT_TOKEN_18 = 20 * 1e18;\\n    uint256 public constant MINT_AMOUNT_TOKEN_6 = 20 * 1e6;\\n\\n    address public ruby;\\n    address public usdp;\\n    address public usdc;\\n    address public usdt;\\n    address public dai;\\n\\n    constructor (\\n        address _ruby,\\n        address _usdp,\\n        address _usdc,\\n        address _usdt,\\n        address _dai\\n    ) public payable {\\n\\n        require(_ruby != address(0), \\\"Faucet: Invalid RUBY address\\\");\\n        require(_usdp != address(0), \\\"Faucet: Invalid USDP address\\\");\\n        require(_usdc != address(0), \\\"Faucet: Invalid USDC address\\\");\\n        require(_usdt != address(0), \\\"Faucet: Invalid USDT address\\\");\\n        require(_dai != address(0), \\\"Faucet: Invalid DAI address\\\");\\n\\n        ruby = _ruby;\\n        usdp = _usdp;\\n        usdc = _usdc;\\n        usdt = _usdt;\\n        dai = _dai;\\n\\n    }\\n    // Function to receive Ether. msg.data must be empty\\n    receive() external payable {}\\n    // Fallback function is called when msg.data is not empty\\n    fallback() external payable {}\\n\\n    function mint(address payable receiver) external {\\n        receiver.transfer(MINT_AMOUNT_ETH);\\n        IERC20(ruby).transfer(receiver, MINT_AMOUNT_TOKEN_18);\\n        IERC20(usdp).transfer(receiver, MINT_AMOUNT_TOKEN_18);\\n        IERC20(dai).transfer(receiver, MINT_AMOUNT_TOKEN_18);\\n        IERC20(usdc).transfer(receiver, MINT_AMOUNT_TOKEN_6);\\n        IERC20(usdt).transfer(receiver, MINT_AMOUNT_TOKEN_6);\\n\\n    }\\n\\n    function withdraw() onlyOwner public {\\n        msg.sender.transfer(address(this).balance);\\n\\n        IERC20(ruby).transfer(msg.sender, IERC20(ruby).balanceOf(address(this)));\\n        IERC20(usdp).transfer(msg.sender, IERC20(usdp).balanceOf(address(this)));\\n        IERC20(dai).transfer(msg.sender, IERC20(dai).balanceOf(address(this)));\\n        IERC20(usdc).transfer(msg.sender, IERC20(usdc).balanceOf(address(this)));\\n        IERC20(usdt).transfer(msg.sender, IERC20(usdt).balanceOf(address(this)));\\n    }\\n}\",\"keccak256\":\"0x17100a371363674e70bb23239098cf48c2f01924d55d805f38ca6a26714b7743\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080604052604051611042380380611042833981810160405260a081101561002657600080fd5b50805160208201516040830151606084015160809094015192939192909190600061004f6102c2565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506001600160a01b0385166100f4576040805162461bcd60e51b815260206004820152601c60248201527f4661756365743a20496e76616c69642052554259206164647265737300000000604482015290519081900360640190fd5b6001600160a01b03841661014f576040805162461bcd60e51b815260206004820152601c60248201527f4661756365743a20496e76616c69642055534450206164647265737300000000604482015290519081900360640190fd5b6001600160a01b0383166101aa576040805162461bcd60e51b815260206004820152601c60248201527f4661756365743a20496e76616c69642055534443206164647265737300000000604482015290519081900360640190fd5b6001600160a01b038216610205576040805162461bcd60e51b815260206004820152601c60248201527f4661756365743a20496e76616c69642055534454206164647265737300000000604482015290519081900360640190fd5b6001600160a01b038116610260576040805162461bcd60e51b815260206004820152601b60248201527f4661756365743a20496e76616c69642044414920616464726573730000000000604482015290519081900360640190fd5b600180546001600160a01b03199081166001600160a01b039788161790915560028054821695871695909517909455600380548516938616939093179092556004805484169185169190911790556005805490921692169190911790556102c6565b3390565b610d6d806102d56000396000f3fe6080604052600436106100c65760003560e01c8063715018a61161007f578063b852f1b611610059578063b852f1b6146101d8578063d3229485146101ed578063f2fde38b14610202578063f4b9fa7514610235576100cd565b8063715018a61461019957806374e6076c146101ae5780638da5cb5b146101c3576100cd565b806323336cc0146100cf5780632f48ab7d146100f65780633ccfd60b146101275780633e413bee1461013c5780636a627842146101515780636bf8c8bd14610184576100cd565b366100cd57005b005b3480156100db57600080fd5b506100e461024a565b60408051918252519081900360200190f35b34801561010257600080fd5b5061010b610256565b604080516001600160a01b039092168252519081900360200190f35b34801561013357600080fd5b506100cd610265565b34801561014857600080fd5b5061010b6107f2565b34801561015d57600080fd5b506100cd6004803603602081101561017457600080fd5b50356001600160a01b0316610801565b34801561019057600080fd5b506100e4610aea565b3480156101a557600080fd5b506100cd610af2565b3480156101ba57600080fd5b5061010b610bb0565b3480156101cf57600080fd5b5061010b610bbf565b3480156101e457600080fd5b506100e4610bce565b3480156101f957600080fd5b5061010b610bdb565b34801561020e57600080fd5b506100cd6004803603602081101561022557600080fd5b50356001600160a01b0316610bea565b34801561024157600080fd5b5061010b610cfe565b670429d069189e000081565b6004546001600160a01b031681565b61026d610d0d565b6001600160a01b031661027e610bbf565b6001600160a01b0316146102d9576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60405133904780156108fc02916000818181858888f19350505050158015610305573d6000803e3d6000fd5b50600154604080516370a0823160e01b815230600482015290516001600160a01b039092169163a9059cbb91339184916370a08231916024808301926020929190829003018186803b15801561035a57600080fd5b505afa15801561036e573d6000803e3d6000fd5b505050506040513d602081101561038457600080fd5b5051604080516001600160e01b031960e086901b1681526001600160a01b03909316600484015260248301919091525160448083019260209291908290030181600087803b1580156103d557600080fd5b505af11580156103e9573d6000803e3d6000fd5b505050506040513d60208110156103ff57600080fd5b5050600254604080516370a0823160e01b815230600482015290516001600160a01b039092169163a9059cbb91339184916370a08231916024808301926020929190829003018186803b15801561045557600080fd5b505afa158015610469573d6000803e3d6000fd5b505050506040513d602081101561047f57600080fd5b5051604080516001600160e01b031960e086901b1681526001600160a01b03909316600484015260248301919091525160448083019260209291908290030181600087803b1580156104d057600080fd5b505af11580156104e4573d6000803e3d6000fd5b505050506040513d60208110156104fa57600080fd5b5050600554604080516370a0823160e01b815230600482015290516001600160a01b039092169163a9059cbb91339184916370a08231916024808301926020929190829003018186803b15801561055057600080fd5b505afa158015610564573d6000803e3d6000fd5b505050506040513d602081101561057a57600080fd5b5051604080516001600160e01b031960e086901b1681526001600160a01b03909316600484015260248301919091525160448083019260209291908290030181600087803b1580156105cb57600080fd5b505af11580156105df573d6000803e3d6000fd5b505050506040513d60208110156105f557600080fd5b5050600354604080516370a0823160e01b815230600482015290516001600160a01b039092169163a9059cbb91339184916370a08231916024808301926020929190829003018186803b15801561064b57600080fd5b505afa15801561065f573d6000803e3d6000fd5b505050506040513d602081101561067557600080fd5b5051604080516001600160e01b031960e086901b1681526001600160a01b03909316600484015260248301919091525160448083019260209291908290030181600087803b1580156106c657600080fd5b505af11580156106da573d6000803e3d6000fd5b505050506040513d60208110156106f057600080fd5b505060048054604080516370a0823160e01b81523093810193909352516001600160a01b039091169163a9059cbb91339184916370a0823191602480820192602092909190829003018186803b15801561074957600080fd5b505afa15801561075d573d6000803e3d6000fd5b505050506040513d602081101561077357600080fd5b5051604080516001600160e01b031960e086901b1681526001600160a01b03909316600484015260248301919091525160448083019260209291908290030181600087803b1580156107c457600080fd5b505af11580156107d8573d6000803e3d6000fd5b505050506040513d60208110156107ee57600080fd5b5050565b6003546001600160a01b031681565b6040516001600160a01b03821690600090670429d069189e00009082818181858883f1935050505015801561083a573d6000803e3d6000fd5b506001546040805163a9059cbb60e01b81526001600160a01b0384811660048301526801158e460913d0000060248301529151919092169163a9059cbb9160448083019260209291908290030181600087803b15801561089957600080fd5b505af11580156108ad573d6000803e3d6000fd5b505050506040513d60208110156108c357600080fd5b50506002546040805163a9059cbb60e01b81526001600160a01b0384811660048301526801158e460913d0000060248301529151919092169163a9059cbb9160448083019260209291908290030181600087803b15801561092357600080fd5b505af1158015610937573d6000803e3d6000fd5b505050506040513d602081101561094d57600080fd5b50506005546040805163a9059cbb60e01b81526001600160a01b0384811660048301526801158e460913d0000060248301529151919092169163a9059cbb9160448083019260209291908290030181600087803b1580156109ad57600080fd5b505af11580156109c1573d6000803e3d6000fd5b505050506040513d60208110156109d757600080fd5b50506003546040805163a9059cbb60e01b81526001600160a01b0384811660048301526301312d0060248301529151919092169163a9059cbb9160448083019260209291908290030181600087803b158015610a3257600080fd5b505af1158015610a46573d6000803e3d6000fd5b505050506040513d6020811015610a5c57600080fd5b5050600480546040805163a9059cbb60e01b81526001600160a01b03858116948201949094526301312d0060248201529051929091169163a9059cbb916044808201926020929091908290030181600087803b158015610abb57600080fd5b505af1158015610acf573d6000803e3d6000fd5b505050506040513d6020811015610ae557600080fd5b505050565b6301312d0081565b610afa610d0d565b6001600160a01b0316610b0b610bbf565b6001600160a01b031614610b66576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6002546001600160a01b031681565b6000546001600160a01b031690565b6801158e460913d0000081565b6001546001600160a01b031681565b610bf2610d0d565b6001600160a01b0316610c03610bbf565b6001600160a01b031614610c5e576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b038116610ca35760405162461bcd60e51b8152600401808060200182810382526026815260200180610d126026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6005546001600160a01b031681565b339056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a2646970667358221220f235d3c28c2eab94b58dc314b2f67b5b6c9d71a44e60a501929da1faa93dd72d64736f6c634300060c0033",
  "deployedBytecode": "0x6080604052600436106100c65760003560e01c8063715018a61161007f578063b852f1b611610059578063b852f1b6146101d8578063d3229485146101ed578063f2fde38b14610202578063f4b9fa7514610235576100cd565b8063715018a61461019957806374e6076c146101ae5780638da5cb5b146101c3576100cd565b806323336cc0146100cf5780632f48ab7d146100f65780633ccfd60b146101275780633e413bee1461013c5780636a627842146101515780636bf8c8bd14610184576100cd565b366100cd57005b005b3480156100db57600080fd5b506100e461024a565b60408051918252519081900360200190f35b34801561010257600080fd5b5061010b610256565b604080516001600160a01b039092168252519081900360200190f35b34801561013357600080fd5b506100cd610265565b34801561014857600080fd5b5061010b6107f2565b34801561015d57600080fd5b506100cd6004803603602081101561017457600080fd5b50356001600160a01b0316610801565b34801561019057600080fd5b506100e4610aea565b3480156101a557600080fd5b506100cd610af2565b3480156101ba57600080fd5b5061010b610bb0565b3480156101cf57600080fd5b5061010b610bbf565b3480156101e457600080fd5b506100e4610bce565b3480156101f957600080fd5b5061010b610bdb565b34801561020e57600080fd5b506100cd6004803603602081101561022557600080fd5b50356001600160a01b0316610bea565b34801561024157600080fd5b5061010b610cfe565b670429d069189e000081565b6004546001600160a01b031681565b61026d610d0d565b6001600160a01b031661027e610bbf565b6001600160a01b0316146102d9576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60405133904780156108fc02916000818181858888f19350505050158015610305573d6000803e3d6000fd5b50600154604080516370a0823160e01b815230600482015290516001600160a01b039092169163a9059cbb91339184916370a08231916024808301926020929190829003018186803b15801561035a57600080fd5b505afa15801561036e573d6000803e3d6000fd5b505050506040513d602081101561038457600080fd5b5051604080516001600160e01b031960e086901b1681526001600160a01b03909316600484015260248301919091525160448083019260209291908290030181600087803b1580156103d557600080fd5b505af11580156103e9573d6000803e3d6000fd5b505050506040513d60208110156103ff57600080fd5b5050600254604080516370a0823160e01b815230600482015290516001600160a01b039092169163a9059cbb91339184916370a08231916024808301926020929190829003018186803b15801561045557600080fd5b505afa158015610469573d6000803e3d6000fd5b505050506040513d602081101561047f57600080fd5b5051604080516001600160e01b031960e086901b1681526001600160a01b03909316600484015260248301919091525160448083019260209291908290030181600087803b1580156104d057600080fd5b505af11580156104e4573d6000803e3d6000fd5b505050506040513d60208110156104fa57600080fd5b5050600554604080516370a0823160e01b815230600482015290516001600160a01b039092169163a9059cbb91339184916370a08231916024808301926020929190829003018186803b15801561055057600080fd5b505afa158015610564573d6000803e3d6000fd5b505050506040513d602081101561057a57600080fd5b5051604080516001600160e01b031960e086901b1681526001600160a01b03909316600484015260248301919091525160448083019260209291908290030181600087803b1580156105cb57600080fd5b505af11580156105df573d6000803e3d6000fd5b505050506040513d60208110156105f557600080fd5b5050600354604080516370a0823160e01b815230600482015290516001600160a01b039092169163a9059cbb91339184916370a08231916024808301926020929190829003018186803b15801561064b57600080fd5b505afa15801561065f573d6000803e3d6000fd5b505050506040513d602081101561067557600080fd5b5051604080516001600160e01b031960e086901b1681526001600160a01b03909316600484015260248301919091525160448083019260209291908290030181600087803b1580156106c657600080fd5b505af11580156106da573d6000803e3d6000fd5b505050506040513d60208110156106f057600080fd5b505060048054604080516370a0823160e01b81523093810193909352516001600160a01b039091169163a9059cbb91339184916370a0823191602480820192602092909190829003018186803b15801561074957600080fd5b505afa15801561075d573d6000803e3d6000fd5b505050506040513d602081101561077357600080fd5b5051604080516001600160e01b031960e086901b1681526001600160a01b03909316600484015260248301919091525160448083019260209291908290030181600087803b1580156107c457600080fd5b505af11580156107d8573d6000803e3d6000fd5b505050506040513d60208110156107ee57600080fd5b5050565b6003546001600160a01b031681565b6040516001600160a01b03821690600090670429d069189e00009082818181858883f1935050505015801561083a573d6000803e3d6000fd5b506001546040805163a9059cbb60e01b81526001600160a01b0384811660048301526801158e460913d0000060248301529151919092169163a9059cbb9160448083019260209291908290030181600087803b15801561089957600080fd5b505af11580156108ad573d6000803e3d6000fd5b505050506040513d60208110156108c357600080fd5b50506002546040805163a9059cbb60e01b81526001600160a01b0384811660048301526801158e460913d0000060248301529151919092169163a9059cbb9160448083019260209291908290030181600087803b15801561092357600080fd5b505af1158015610937573d6000803e3d6000fd5b505050506040513d602081101561094d57600080fd5b50506005546040805163a9059cbb60e01b81526001600160a01b0384811660048301526801158e460913d0000060248301529151919092169163a9059cbb9160448083019260209291908290030181600087803b1580156109ad57600080fd5b505af11580156109c1573d6000803e3d6000fd5b505050506040513d60208110156109d757600080fd5b50506003546040805163a9059cbb60e01b81526001600160a01b0384811660048301526301312d0060248301529151919092169163a9059cbb9160448083019260209291908290030181600087803b158015610a3257600080fd5b505af1158015610a46573d6000803e3d6000fd5b505050506040513d6020811015610a5c57600080fd5b5050600480546040805163a9059cbb60e01b81526001600160a01b03858116948201949094526301312d0060248201529051929091169163a9059cbb916044808201926020929091908290030181600087803b158015610abb57600080fd5b505af1158015610acf573d6000803e3d6000fd5b505050506040513d6020811015610ae557600080fd5b505050565b6301312d0081565b610afa610d0d565b6001600160a01b0316610b0b610bbf565b6001600160a01b031614610b66576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6002546001600160a01b031681565b6000546001600160a01b031690565b6801158e460913d0000081565b6001546001600160a01b031681565b610bf2610d0d565b6001600160a01b0316610c03610bbf565b6001600160a01b031614610c5e576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b038116610ca35760405162461bcd60e51b8152600401808060200182810382526026815260200180610d126026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6005546001600160a01b031681565b339056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a2646970667358221220f235d3c28c2eab94b58dc314b2f67b5b6c9d71a44e60a501929da1faa93dd72d64736f6c634300060c0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 2120,
        "contract": "contracts/faucet/Faucet.sol:Faucet",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 16031,
        "contract": "contracts/faucet/Faucet.sol:Faucet",
        "label": "ruby",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 16033,
        "contract": "contracts/faucet/Faucet.sol:Faucet",
        "label": "usdp",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 16035,
        "contract": "contracts/faucet/Faucet.sol:Faucet",
        "label": "usdc",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 16037,
        "contract": "contracts/faucet/Faucet.sol:Faucet",
        "label": "usdt",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 16039,
        "contract": "contracts/faucet/Faucet.sol:Faucet",
        "label": "dai",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      }
    }
  }
}
