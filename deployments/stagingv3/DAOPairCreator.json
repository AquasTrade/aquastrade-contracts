{
  "address": "0xDeb189bfe678C51D9d3debe8B548c97144fBa927",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_router",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_usdp",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_rubyStaker",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "USDP",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountADesired",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountBDesired",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountAMin",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountBMin",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "addLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountB",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "authorized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        }
      ],
      "name": "createPair",
      "outputs": [
        {
          "internalType": "address",
          "name": "pair",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "factory",
      "outputs": [
        {
          "internalType": "contract IUniswapV2Factory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumLockedBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumUnlockedBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "router",
      "outputs": [
        {
          "internalType": "contract IUniswapV2Router02",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rubyStaker",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "setAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "unlocked",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "locked",
          "type": "uint256"
        }
      ],
      "name": "setMinimumBalanceRequired",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x0fdebdf3281947ecf67a34230fce5fa165896e13af104eea3c743519ea2ae5df",
  "receipt": {
    "to": "0x0000000000000000000000000000000000000000",
    "from": "0xF63Bb14E7E9bD2882957129c3E3197E6D18933B4",
    "contractAddress": "0xDeb189bfe678C51D9d3debe8B548c97144fBa927",
    "transactionIndex": 0,
    "gasUsed": "1020972",
    "logsBloom": "0x
    "blockHash": "0xd88abb7309ba7aaa7be0ad0222188bc56115122ed22342d0a1539d104f464f00",
    "transactionHash": "0x0fdebdf3281947ecf67a34230fce5fa165896e13af104eea3c743519ea2ae5df",
    "logs": [],
    "blockNumber": 1846559,
    "cumulativeGasUsed": "1020972",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xF63Bb14E7E9bD2882957129c3E3197E6D18933B4",
    "0x374264b48cE947F989DE7A2f77cEbDc8bC051735",
    "0x8e8cEeD240B0dDE52AD9c2805a730bEaCf7cA216",
    "0xe0E2cb3A5d6f94a5bc2D00FAa3e64460A9D241E1",
    "0x859197B9d3957B29Da07a3B8c22398f98134aDF9"
  ],
  "numDeployments": 1,
  "solcInputHash": "8baa7cfde3197c5f824a0531ade2faa3",
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_router\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdp\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rubyStaker\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"USDP\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"authorized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Factory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumLockedBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumUnlockedBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"router\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rubyStaker\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"setAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"unlocked\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"locked\",\"type\":\"uint256\"}],\"name\":\"setMinimumBalanceRequired\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DAOPairCreator.sol\":\"DAOPairCreator\"},\"evmVersion\":\"istanbul\",\"libraries\":{\"__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/DAOPairCreator.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity =0.6.12;\\n\\nimport \\\"./interfaces/IDAOPairCreator.sol\\\";\\nimport \\\"./amm/interfaces/IUniswapV2Factory.sol\\\";\\nimport \\\"./amm/interfaces/IUniswapV2Router02.sol\\\";\\nimport \\\"./amm/libraries/TransferHelper.sol\\\";\\n\\ncontract DAOPairCreator is IDAOPairCreator {\\n    IUniswapV2Factory public factory;\\n    IUniswapV2Router02 public router;\\n    address public admin;\\n    address public USDP;\\n    address public rubyStaker;\\n    uint256 public minimumUnlockedBalance = 0;\\n    uint256 public minimumLockedBalance = 100000 ether;\\n\\n    constructor(\\n        address _admin,\\n        address _factory,\\n        address _router,\\n        address _usdp,\\n        address _rubyStaker\\n    ) public {\\n        require(_admin != address(0), \\\"DAOPairCreator: INVALID_INIT_ARG\\\");\\n        require(_factory != address(0), \\\"DAOPairCreator: INVALID_INIT_ARG\\\");\\n        require(_router != address(0), \\\"DAOPairCreator: INVALID_INIT_ARG\\\");\\n        require(_usdp != address(0), \\\"DAOPairCreator: INVALID_INIT_ARG\\\");\\n        admin = _admin;\\n        factory = IUniswapV2Factory(_factory);\\n        router = IUniswapV2Router02(_router);\\n        USDP = _usdp;\\n        rubyStaker = _rubyStaker;\\n    }\\n\\n    function createPair(address tokenA, address tokenB) external override returns (address pair) {\\n        authorized(msg.sender);\\n        require(tokenA == USDP || tokenB == USDP, \\\"DAOPairCreator: INVALID_TOKEN\\\");\\n        pair = factory.createPair(tokenA, tokenB);\\n    }\\n\\n    function addLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint256 amountADesired,\\n        uint256 amountBDesired,\\n        uint256 amountAMin,\\n        uint256 amountBMin,\\n        address to,\\n        uint256 deadline\\n    )\\n        external\\n        override\\n        returns (\\n            uint256 amountA,\\n            uint256 amountB,\\n            uint256 liquidity\\n        )\\n    {\\n        authorized(msg.sender);\\n        require(tokenA == USDP || tokenB == USDP, \\\"DAOPairCreator: INVALID_TOKEN\\\");\\n        TransferHelper.safeTransferFrom(tokenA, msg.sender, address(this), amountADesired);\\n        TransferHelper.safeTransferFrom(tokenB, msg.sender, address(this), amountBDesired);\\n        TransferHelper.safeApprove(tokenA, address(router), amountADesired);\\n        TransferHelper.safeApprove(tokenB, address(router), amountBDesired);\\n        (amountA, amountB, liquidity) = router.addLiquidity(\\n            tokenA,\\n            tokenB,\\n            amountADesired,\\n            amountBDesired,\\n            amountAMin,\\n            amountBMin,\\n            to,\\n            deadline\\n        );\\n        if (amountADesired > amountA)\\n            TransferHelper.safeTransfer(tokenA, msg.sender, amountADesired - amountA);\\n        if (amountBDesired > amountB)\\n            TransferHelper.safeTransfer(tokenB, msg.sender, amountBDesired - amountB);\\n        TransferHelper.safeApprove(tokenA, address(router), 0);\\n        TransferHelper.safeApprove(tokenB, address(router), 0);\\n    }\\n\\n    function setAdmin(address newAdmin) external override {\\n        require(msg.sender == admin, \\\"DAOPairCreator: FORBIDDEN\\\");\\n        require(newAdmin != address(0), \\\"DAOPairCreator: INVALID_INIT_ARG\\\");\\n        admin = newAdmin;\\n    }\\n\\n    function setMinimumBalanceRequired(uint256 unlocked, uint256 locked) external override {\\n        require(msg.sender == admin, \\\"DAOPairCreator: FORBIDDEN\\\");\\n        minimumUnlockedBalance = unlocked;\\n        minimumLockedBalance = locked;\\n    }\\n\\n    function authorized(address user) public view override returns (bool) {\\n        (bool success0, bytes memory unlockedData) = rubyStaker.staticcall(\\n            abi.encodeWithSignature(\\\"unlockedBalance(address)\\\", user)\\n        );\\n        require(success0, \\\"DAOPairCreator: INVALID_CALL\\\");\\n        uint256 unlocked = abi.decode(unlockedData, (uint256));\\n        (bool success1, bytes memory lockedData) = rubyStaker.staticcall(\\n            abi.encodeWithSignature(\\\"lockedBalances(address)\\\", user)\\n        );\\n        require(success1, \\\"DAOPairCreator: INVALID_CALL\\\");\\n        uint256 locked = abi.decode(lockedData, (uint256));\\n        require(unlocked >= minimumUnlockedBalance, \\\"DAOPairCreator: INSUFFICIENT UNLOCKED RUBY\\\");\\n        require(locked >= minimumLockedBalance, \\\"DAOPairCreator: INSUFFICIENT LOCKED RUBY\\\");\\n        return true;\\n    }\\n}\\n\",\"keccak256\":\"0xa08693a1f83de92772403f8f66633a7131e9e226256b5e1741e39944ffc5f731\",\"license\":\"GPL-3.0\"},\"contracts/amm/interfaces/IUniswapV2Factory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity >=0.5.0;\\n\\ninterface IUniswapV2Factory {\\n\\n    event PairCreated(address indexed token0, address indexed token1, address pair, uint256);\\n    event AdminSet(address indexed newAdmin);\\n    event FeeToRecipientSet(address indexed newFeeTo);\\n    event PairCreatorSet(address indexed pairCreator, bool allowance);\\n    event FeeDecutionSwapperSet(address indexed swapper, bool allowance);\\n\\n    function feeTo() external view returns (address);\\n\\n    function admin() external view returns (address);\\n\\n    function pairCreators(address) external view returns (bool);\\n\\n    function feeDeductionSwappers(address) external view returns (bool);\\n\\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\\n\\n    function allPairs(uint256) external view returns (address pair);\\n\\n    function allPairsLength() external view returns (uint256);\\n\\n    function createPair(address tokenA, address tokenB) external returns (address pair);\\n\\n    function setFeeTo(address newFeeTo) external;\\n\\n    function setPairCreator(address pairCreator, bool allowance) external;\\n\\n    function setFeeDeductionSwapper(address feeDeductionSwapper, bool allowance) external;\\n\\n    function setAdmin(address newAdmin) external;\\n}\\n\",\"keccak256\":\"0xbc812c2f059f5b1474e1ffae148fc77f603bf62b87f3a0f86ea6451a1aa2301a\",\"license\":\"GPL-3.0\"},\"contracts/amm/interfaces/IUniswapV2Router01.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity >=0.6.2;\\n\\ninterface IUniswapV2Router01 {\\n    function factory() external pure returns (address);\\n\\n    function addLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint256 amountADesired,\\n        uint256 amountBDesired,\\n        uint256 amountAMin,\\n        uint256 amountBMin,\\n        address to,\\n        uint256 deadline\\n    )\\n        external\\n        returns (\\n            uint256 amountA,\\n            uint256 amountB,\\n            uint256 liquidity\\n        );\\n\\n    function removeLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint256 liquidity,\\n        uint256 amountAMin,\\n        uint256 amountBMin,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256 amountA, uint256 amountB);\\n\\n    function removeLiquidityWithPermit(\\n        address tokenA,\\n        address tokenB,\\n        uint256 liquidity,\\n        uint256 amountAMin,\\n        uint256 amountBMin,\\n        address to,\\n        uint256 deadline,\\n        bool approveMax,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external returns (uint256 amountA, uint256 amountB);\\n\\n    function swapExactTokensForTokens(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function swapTokensForExactTokens(\\n        uint256 amountOut,\\n        uint256 amountInMax,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function quote(\\n        uint256 amountA,\\n        uint256 reserveA,\\n        uint256 reserveB\\n    ) external pure returns (uint256 amountB);\\n\\n    function getAmountOut(\\n        uint256 amountIn,\\n        uint256 reserveIn,\\n        uint256 reserveOut,\\n        uint256 feeMultiplier\\n    ) external pure returns (uint256 amountOut);\\n\\n    function getAmountIn(\\n        uint256 amountOut,\\n        uint256 reserveIn,\\n        uint256 reserveOut,\\n        uint256 feeMultiplier\\n    ) external pure returns (uint256 amountIn);\\n\\n    function getAmountsOut(\\n        uint256 amountIn,\\n        address[] calldata path,\\n        uint256 feeMultiplier\\n    ) external view returns (uint256[] memory amounts);\\n\\n    function getAmountsIn(\\n        uint256 amountOut,\\n        address[] calldata path,\\n        uint256 feeMultiplier\\n    ) external view returns (uint256[] memory amounts);\\n}\\n\",\"keccak256\":\"0xa91e35729661da1916c81248ba75074bfbd9eed60ba873d8b4d7e0a27ac3a8b2\",\"license\":\"GPL-3.0\"},\"contracts/amm/interfaces/IUniswapV2Router02.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity >=0.6.2;\\n\\nimport \\\"./IUniswapV2Router01.sol\\\";\\nimport \\\"../../interfaces/IRubyNFTAdmin.sol\\\";\\n\\ninterface IUniswapV2Router02 is IUniswapV2Router01 {\\n\\n    event FactorySet(address indexed newFactory);\\n\\n    event NFTAdminSet(address indexed newNftAdmin);\\n\\n    function nftAdmin() external pure returns (IRubyNFTAdmin);\\n\\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external;\\n\\n    function setFactory(address newFactory) external;\\n\\n    function setNftAdmin(IRubyNFTAdmin newNftAdmin) external;\\n}\\n\",\"keccak256\":\"0x55a906dc5491d5fffb8b773a10b3f39a5db3813696ba91a7eabafcf2cf4d702b\",\"license\":\"GPL-3.0\"},\"contracts/amm/libraries/TransferHelper.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity >=0.6.0;\\n\\n// helper methods for interacting with ERC20 tokens and sending ETH that do not consistently return true/false\\nlibrary TransferHelper {\\n    function safeApprove(\\n        address token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        // bytes4(keccak256(bytes('approve(address,uint256)')));\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x095ea7b3, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"TransferHelper: APPROVE_FAILED\\\");\\n    }\\n\\n    function safeTransfer(\\n        address token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        // bytes4(keccak256(bytes('transfer(address,uint256)')));\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0xa9059cbb, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"TransferHelper: TRANSFER_FAILED\\\");\\n    }\\n\\n    function safeTransferFrom(\\n        address token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        // bytes4(keccak256(bytes('transferFrom(address,address,uint256)')));\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x23b872dd, from, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"TransferHelper: TRANSFER_FROM_FAILED\\\");\\n    }\\n\\n    function safeTransferETH(address to, uint256 value) internal {\\n        (bool success, ) = to.call{ value: value }(new bytes(0));\\n        require(success, \\\"TransferHelper: ETH_TRANSFER_FAILED\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x24cf55605ab9aa3b0b949e9cb495e1f9eb566d3da1e97d22d4107ef5a165a247\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/IDAOPairCreator.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity >=0.5.0;\\n\\ninterface IDAOPairCreator {\\n    function createPair(address tokenA, address tokenB) external returns (address pair);\\n\\n    function setAdmin(address newAdmin) external;\\n\\n    function setMinimumBalanceRequired(uint256 unlocked, uint256 locked) external;\\n\\n    function authorized(address user) external view returns (bool);\\n\\n    function addLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint256 amountADesired,\\n        uint256 amountBDesired,\\n        uint256 amountAMin,\\n        uint256 amountBMin,\\n        address to,\\n        uint256 deadline\\n    )\\n        external\\n        returns (\\n            uint256 amountA,\\n            uint256 amountB,\\n            uint256 liquidity\\n        );\\n}\\n\",\"keccak256\":\"0xf98c7d10a75eb57aa872bd90709b8fd8c5867413725b54ffa5bc7882b7594526\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/IRubyNFTAdmin.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.6.12;\\n\\ninterface IRubyNFTAdmin {\\n\\n    event MinterSet(address indexed minter, bool allowance);\\n\\n    event FreeSwapNFTSet(address indexed freeSwapNFT);\\n\\n    event RubyProfileNFTset(address indexed profileNFT);\\n\\n    function profileNFT() external view returns (address);\\n\\n    function freeSwapNFT() external view returns (address);\\n\\n    function minters(address minter) external view returns (bool);\\n\\n    function calculateAmmSwapFeeDeduction(address user) external view returns (uint256 feeMultiplier);\\n\\n    function mintProfileNFT(address user) external;\\n\\n    function setProfileNFT(address newProfileNFT) external;\\n\\n    function setFreeSwapNFT(address newFreeSwapNFT) external;\\n\\n    function setMinter(address minter, bool allowance) external;\\n}\\n\",\"keccak256\":\"0x987e97cc9bedaea0b4ea5240bcdd5276d3e9ec5768945c76e3446e9cd568ee74\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080604052600060055569152d02c7e14af680000060065534801561002357600080fd5b50604051611112380380611112833981810160405260a081101561004657600080fd5b508051602082015160408301516060840151608090940151929391929091906001600160a01b0385166100ae576040805162461bcd60e51b815260206004820181905260248201526000805160206110f2833981519152604482015290519081900360640190fd5b6001600160a01b0384166100f7576040805162461bcd60e51b815260206004820181905260248201526000805160206110f2833981519152604482015290519081900360640190fd5b6001600160a01b038316610140576040805162461bcd60e51b815260206004820181905260248201526000805160206110f2833981519152604482015290519081900360640190fd5b6001600160a01b038216610189576040805162461bcd60e51b815260206004820181905260248201526000805160206110f2833981519152604482015290519081900360640190fd5b600280546001600160a01b039687166001600160a01b031991821617909155600080549587169582169590951790945560018054938616938516939093179092556003805491851691841691909117905560048054919093169116179055610efc806101f66000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063c45a015511610071578063c45a015514610184578063c9c653961461018c578063d604198b146101ba578063e8e33700146101c2578063f851a44014610235578063f887ea401461023d576100b4565b806365e9729d146100b9578063704b6c02146100de578063adf22cd814610104578063b15209221461011e578063b918161114610142578063c0a0a5a21461017c575b600080fd5b6100dc600480360360408110156100cf57600080fd5b5080359060200135610245565b005b6100dc600480360360208110156100f457600080fd5b50356001600160a01b03166102ab565b61010c610383565b60408051918252519081900360200190f35b610126610389565b604080516001600160a01b039092168252519081900360200190f35b6101686004803603602081101561015857600080fd5b50356001600160a01b0316610398565b604080519115158252519081900360200190f35b6101266106d4565b6101266106e3565b610126600480360360408110156101a257600080fd5b506001600160a01b03813581169160200135166106f2565b61010c610805565b61021760048036036101008110156101d957600080fd5b506001600160a01b038135811691602081013582169160408201359160608101359160808201359160a08101359160c0820135169060e0013561080b565b60408051938452602084019290925282820152519081900360600190f35b610126610a08565b610126610a17565b6002546001600160a01b031633146102a0576040805162461bcd60e51b81526020600482015260196024820152782220a7a830b4b921b932b0ba37b91d102327a92124a22222a760391b604482015290519081900360640190fd5b600591909155600655565b6002546001600160a01b03163314610306576040805162461bcd60e51b81526020600482015260196024820152782220a7a830b4b921b932b0ba37b91d102327a92124a22222a760391b604482015290519081900360640190fd5b6001600160a01b038116610361576040805162461bcd60e51b815260206004820181905260248201527f44414f5061697243726561746f723a20494e56414c49445f494e49545f415247604482015290519081900360640190fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b60055481565b6003546001600160a01b031681565b600454604080516001600160a01b0384811660248084019190915283518084039091018152604490920183526020820180516001600160e01b0316632f07d61760e11b178152925182516000958695606095949091169392918291908083835b602083106104175780518252601f1990920191602091820191016103f8565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114610477576040519150601f19603f3d011682016040523d82523d6000602084013e61047c565b606091505b5091509150816104d3576040805162461bcd60e51b815260206004820152601c60248201527f44414f5061697243726561746f723a20494e56414c49445f43414c4c00000000604482015290519081900360640190fd5b60008180602001905160208110156104ea57600080fd5b5051600454604080516001600160a01b0389811660248084019190915283518084039091018152604490920183526020820180516001600160e01b0316630241d3fb60e11b17815292518251959650600095606095929092169390918291908083835b6020831061056c5780518252601f19909201916020918201910161054d565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d80600081146105cc576040519150601f19603f3d011682016040523d82523d6000602084013e6105d1565b606091505b509150915081610628576040805162461bcd60e51b815260206004820152601c60248201527f44414f5061697243726561746f723a20494e56414c49445f43414c4c00000000604482015290519081900360640190fd5b600081806020019051602081101561063f57600080fd5b50516005549091508410156106855760405162461bcd60e51b815260040180806020018281038252602a815260200180610e79602a913960400191505060405180910390fd5b6006548110156106c65760405162461bcd60e51b8152600401808060200182810382526028815260200180610e516028913960400191505060405180910390fd5b506001979650505050505050565b6004546001600160a01b031681565b6000546001600160a01b031681565b60006106fd33610398565b506003546001600160a01b038481169116148061072757506003546001600160a01b038381169116145b610778576040805162461bcd60e51b815260206004820152601d60248201527f44414f5061697243726561746f723a20494e56414c49445f544f4b454e000000604482015290519081900360640190fd5b60008054604080516364e329cb60e11b81526001600160a01b03878116600483015286811660248301529151919092169263c9c6539692604480820193602093909283900390910190829087803b1580156107d257600080fd5b505af11580156107e6573d6000803e3d6000fd5b505050506040513d60208110156107fc57600080fd5b50519392505050565b60065481565b600080600061081933610398565b506003546001600160a01b038c81169116148061084357506003546001600160a01b038b81169116145b610894576040805162461bcd60e51b815260206004820152601d60248201527f44414f5061697243726561746f723a20494e56414c49445f544f4b454e000000604482015290519081900360640190fd5b6108a08b33308c610a26565b6108ac8a33308b610a26565b6001546108c4908c906001600160a01b03168b610b83565b6001546108dc908b906001600160a01b03168a610b83565b6001546040805162e8e33760e81b81526001600160a01b038e811660048301528d81166024830152604482018d9052606482018c9052608482018b905260a482018a905288811660c483015260e482018890529151919092169163e8e33700916101048083019260609291908290030181600087803b15801561095e57600080fd5b505af1158015610972573d6000803e3d6000fd5b505050506040513d606081101561098857600080fd5b50805160208201516040909201519094509092509050828911156109b3576109b38b33858c03610ced565b818811156109c8576109c88a33848b03610ced565b6001546109e1908c906001600160a01b03166000610b83565b6001546109fa908b906001600160a01b03166000610b83565b985098509895505050505050565b6002546001600160a01b031681565b6001546001600160a01b031681565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b17815292518251600094606094938a169392918291908083835b60208310610aab5780518252601f199092019160209182019101610a8c565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114610b0d576040519150601f19603f3d011682016040523d82523d6000602084013e610b12565b606091505b5091509150818015610b40575080511580610b405750808060200190516020811015610b3d57600080fd5b50515b610b7b5760405162461bcd60e51b8152600401808060200182810382526024815260200180610ea36024913960400191505060405180910390fd5b505050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663095ea7b360e01b178152925182516000946060949389169392918291908083835b60208310610c005780518252601f199092019160209182019101610be1565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114610c62576040519150601f19603f3d011682016040523d82523d6000602084013e610c67565b606091505b5091509150818015610c95575080511580610c955750808060200190516020811015610c9257600080fd5b50515b610ce6576040805162461bcd60e51b815260206004820152601e60248201527f5472616e7366657248656c7065723a20415050524f56455f4641494c45440000604482015290519081900360640190fd5b5050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b178152925182516000946060949389169392918291908083835b60208310610d6a5780518252601f199092019160209182019101610d4b565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114610dcc576040519150601f19603f3d011682016040523d82523d6000602084013e610dd1565b606091505b5091509150818015610dff575080511580610dff5750808060200190516020811015610dfc57600080fd5b50515b610ce6576040805162461bcd60e51b815260206004820152601f60248201527f5472616e7366657248656c7065723a205452414e534645525f4641494c454400604482015290519081900360640190fdfe44414f5061697243726561746f723a20494e53554646494349454e54204c4f434b4544205255425944414f5061697243726561746f723a20494e53554646494349454e5420554e4c4f434b454420525542595472616e7366657248656c7065723a205452414e534645525f46524f4d5f4641494c4544a2646970667358221220b33a809fdce258fef8ecd6fde2d8ccdf150dc2deebe238dc3ff84ea4eac6c1d664736f6c634300060c003344414f5061697243726561746f723a20494e56414c49445f494e49545f415247",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100b45760003560e01c8063c45a015511610071578063c45a015514610184578063c9c653961461018c578063d604198b146101ba578063e8e33700146101c2578063f851a44014610235578063f887ea401461023d576100b4565b806365e9729d146100b9578063704b6c02146100de578063adf22cd814610104578063b15209221461011e578063b918161114610142578063c0a0a5a21461017c575b600080fd5b6100dc600480360360408110156100cf57600080fd5b5080359060200135610245565b005b6100dc600480360360208110156100f457600080fd5b50356001600160a01b03166102ab565b61010c610383565b60408051918252519081900360200190f35b610126610389565b604080516001600160a01b039092168252519081900360200190f35b6101686004803603602081101561015857600080fd5b50356001600160a01b0316610398565b604080519115158252519081900360200190f35b6101266106d4565b6101266106e3565b610126600480360360408110156101a257600080fd5b506001600160a01b03813581169160200135166106f2565b61010c610805565b61021760048036036101008110156101d957600080fd5b506001600160a01b038135811691602081013582169160408201359160608101359160808201359160a08101359160c0820135169060e0013561080b565b60408051938452602084019290925282820152519081900360600190f35b610126610a08565b610126610a17565b6002546001600160a01b031633146102a0576040805162461bcd60e51b81526020600482015260196024820152782220a7a830b4b921b932b0ba37b91d102327a92124a22222a760391b604482015290519081900360640190fd5b600591909155600655565b6002546001600160a01b03163314610306576040805162461bcd60e51b81526020600482015260196024820152782220a7a830b4b921b932b0ba37b91d102327a92124a22222a760391b604482015290519081900360640190fd5b6001600160a01b038116610361576040805162461bcd60e51b815260206004820181905260248201527f44414f5061697243726561746f723a20494e56414c49445f494e49545f415247604482015290519081900360640190fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b60055481565b6003546001600160a01b031681565b600454604080516001600160a01b0384811660248084019190915283518084039091018152604490920183526020820180516001600160e01b0316632f07d61760e11b178152925182516000958695606095949091169392918291908083835b602083106104175780518252601f1990920191602091820191016103f8565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114610477576040519150601f19603f3d011682016040523d82523d6000602084013e61047c565b606091505b5091509150816104d3576040805162461bcd60e51b815260206004820152601c60248201527f44414f5061697243726561746f723a20494e56414c49445f43414c4c00000000604482015290519081900360640190fd5b60008180602001905160208110156104ea57600080fd5b5051600454604080516001600160a01b0389811660248084019190915283518084039091018152604490920183526020820180516001600160e01b0316630241d3fb60e11b17815292518251959650600095606095929092169390918291908083835b6020831061056c5780518252601f19909201916020918201910161054d565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d80600081146105cc576040519150601f19603f3d011682016040523d82523d6000602084013e6105d1565b606091505b509150915081610628576040805162461bcd60e51b815260206004820152601c60248201527f44414f5061697243726561746f723a20494e56414c49445f43414c4c00000000604482015290519081900360640190fd5b600081806020019051602081101561063f57600080fd5b50516005549091508410156106855760405162461bcd60e51b815260040180806020018281038252602a815260200180610e79602a913960400191505060405180910390fd5b6006548110156106c65760405162461bcd60e51b8152600401808060200182810382526028815260200180610e516028913960400191505060405180910390fd5b506001979650505050505050565b6004546001600160a01b031681565b6000546001600160a01b031681565b60006106fd33610398565b506003546001600160a01b038481169116148061072757506003546001600160a01b038381169116145b610778576040805162461bcd60e51b815260206004820152601d60248201527f44414f5061697243726561746f723a20494e56414c49445f544f4b454e000000604482015290519081900360640190fd5b60008054604080516364e329cb60e11b81526001600160a01b03878116600483015286811660248301529151919092169263c9c6539692604480820193602093909283900390910190829087803b1580156107d257600080fd5b505af11580156107e6573d6000803e3d6000fd5b505050506040513d60208110156107fc57600080fd5b50519392505050565b60065481565b600080600061081933610398565b506003546001600160a01b038c81169116148061084357506003546001600160a01b038b81169116145b610894576040805162461bcd60e51b815260206004820152601d60248201527f44414f5061697243726561746f723a20494e56414c49445f544f4b454e000000604482015290519081900360640190fd5b6108a08b33308c610a26565b6108ac8a33308b610a26565b6001546108c4908c906001600160a01b03168b610b83565b6001546108dc908b906001600160a01b03168a610b83565b6001546040805162e8e33760e81b81526001600160a01b038e811660048301528d81166024830152604482018d9052606482018c9052608482018b905260a482018a905288811660c483015260e482018890529151919092169163e8e33700916101048083019260609291908290030181600087803b15801561095e57600080fd5b505af1158015610972573d6000803e3d6000fd5b505050506040513d606081101561098857600080fd5b50805160208201516040909201519094509092509050828911156109b3576109b38b33858c03610ced565b818811156109c8576109c88a33848b03610ced565b6001546109e1908c906001600160a01b03166000610b83565b6001546109fa908b906001600160a01b03166000610b83565b985098509895505050505050565b6002546001600160a01b031681565b6001546001600160a01b031681565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b17815292518251600094606094938a169392918291908083835b60208310610aab5780518252601f199092019160209182019101610a8c565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114610b0d576040519150601f19603f3d011682016040523d82523d6000602084013e610b12565b606091505b5091509150818015610b40575080511580610b405750808060200190516020811015610b3d57600080fd5b50515b610b7b5760405162461bcd60e51b8152600401808060200182810382526024815260200180610ea36024913960400191505060405180910390fd5b505050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663095ea7b360e01b178152925182516000946060949389169392918291908083835b60208310610c005780518252601f199092019160209182019101610be1565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114610c62576040519150601f19603f3d011682016040523d82523d6000602084013e610c67565b606091505b5091509150818015610c95575080511580610c955750808060200190516020811015610c9257600080fd5b50515b610ce6576040805162461bcd60e51b815260206004820152601e60248201527f5472616e7366657248656c7065723a20415050524f56455f4641494c45440000604482015290519081900360640190fd5b5050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b178152925182516000946060949389169392918291908083835b60208310610d6a5780518252601f199092019160209182019101610d4b565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114610dcc576040519150601f19603f3d011682016040523d82523d6000602084013e610dd1565b606091505b5091509150818015610dff575080511580610dff5750808060200190516020811015610dfc57600080fd5b50515b610ce6576040805162461bcd60e51b815260206004820152601f60248201527f5472616e7366657248656c7065723a205452414e534645525f4641494c454400604482015290519081900360640190fdfe44414f5061697243726561746f723a20494e53554646494349454e54204c4f434b4544205255425944414f5061697243726561746f723a20494e53554646494349454e5420554e4c4f434b454420525542595472616e7366657248656c7065723a205452414e534645525f46524f4d5f4641494c4544a2646970667358221220b33a809fdce258fef8ecd6fde2d8ccdf150dc2deebe238dc3ff84ea4eac6c1d664736f6c634300060c0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 9406,
        "contract": "contracts/DAOPairCreator.sol:DAOPairCreator",
        "label": "factory",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(IUniswapV2Factory)18058"
      },
      {
        "astId": 9408,
        "contract": "contracts/DAOPairCreator.sol:DAOPairCreator",
        "label": "router",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IUniswapV2Router02)18526"
      },
      {
        "astId": 9410,
        "contract": "contracts/DAOPairCreator.sol:DAOPairCreator",
        "label": "admin",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 9412,
        "contract": "contracts/DAOPairCreator.sol:DAOPairCreator",
        "label": "USDP",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 9414,
        "contract": "contracts/DAOPairCreator.sol:DAOPairCreator",
        "label": "rubyStaker",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 9417,
        "contract": "contracts/DAOPairCreator.sol:DAOPairCreator",
        "label": "minimumUnlockedBalance",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 9420,
        "contract": "contracts/DAOPairCreator.sol:DAOPairCreator",
        "label": "minimumLockedBalance",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(IUniswapV2Factory)18058": {
        "encoding": "inplace",
        "label": "contract IUniswapV2Factory",
        "numberOfBytes": "20"
      },
      "t_contract(IUniswapV2Router02)18526": {
        "encoding": "inplace",
        "label": "contract IUniswapV2Router02",
        "numberOfBytes": "20"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}