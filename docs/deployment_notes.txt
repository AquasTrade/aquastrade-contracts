1. First make sure .env vars are correct
2. Check that no deployments exists for L1 and also for the L2 (skalechain) we're trying to deploy - this is to ensure that new contracts will be deployed. (nothing in the rinkeby directory, and a directory with the new schain name does not exists - all good)
3. Follow the DEPLOYMENT.md guide
    - we will deploy MOCK tokens first on L1 (these are necessary to mock bridging, we'll be bridging tokens from L1)
    - example command: `yarn deploy --tags MockUSDC --network rinkeby`
    - MOCK tokens were deployed on rinkeby successfully - let's deploy mapped tokens now (tokens that need to be mapped) on the new schain. We can see the new schain's name in the hardhat.config.ts (I've added it there previously)
    - MAPPED tokens were deployed, now let's deploy the Ruby token - first on mainnet (rinkeby) and then on the schain (stocky)
    - Ruby tokens were deployed, now let's deploy the rest of the contracts
    - NFT related contracts were deployed, now let's deploy AMM contracts
    - For the AMM contracts, we first need to ensure we have the correct initCodeHash for the uni v2 pairs, which should be placed in the UniswapV2Library contract
    - now we can deploy the AMM contracts
    - AMM contracts have been deployed, staking contracts are next
    - Staking contracts deployed, let's seed the AMM
    - AMM was seeded, we will skip step 5 (we will revisit that later), now let's set staking rewards.
    - In fact we need the ruby masterchef deployed first for step 6. We will deploy masterchef, but we will set rewards (seeding) later.
    - Staking rewards set & masterchef deployed. Now let's deploy stablepool
    - Stablepool deployed, we will seed it later (once we have the tokens bridged)
    - Ruby router deployed
    - RubyNftAdmin and RubyProfileNft contracts seeded
    - Now let's deploy multicall, the timelock contract can be skipped. It is optional and can be added at much later stage, once the protocol is launched.
    - With this we've deployed all the contracts necessary. In the next video I will demo how to bridge tokens, do masterchef and stablepool seeding as well as creating LPs and Farms.
4. Token registration to IMA & bridging
    - First we will register L1 tokens to IMA
    - L1 tokens were registered
    - Let's register L2 tokens to IMA
    - L2 tokens were registered to IMA - now we can bridge the tokens. However before bridging the tokens, let's transfer the rinkeby tokens to the new schain (stocky) owner account. This is not really necessary, but it will enable easier interaction. I've used another account to deploy tokens on rinkeby, but the same account can be used.
    - Tokens were transferred, now we can bridge them
    - Tokens were bridged
5. Transer ruby tokens to masterchef
    - tokens transferred to masterchef, now let's seed the stable pool
6. Seed stablepool
    - stable pool was seeded. Let's create some LPs now
    - first let's bridge some ETH
    - ETH was bridged
7. Create LPs at the AMM
    - let's bridge some more USDP
    - after some debugging, liquidity was successfully added, let's create some farms now
8. Create farms at the masterchef
    - farms were added successfully
9. Deploy & seed Faucet
    - we forgot this step in the previous tutorial
    - faucet was deployed, now let's seed it
    - faucet was seeded successfully
10. Let's do Schain2Schain transfers using the automatic deployment (as per the skale docs)
    - we will bridge from stocky to whispering-turalis
    - first we need to connect schains - also we need to add chain connector role to the token manager linker contract
    - this error is fine because I've already connected the chains. Next step is to deploy some token on the first chain
    - contract was deployed, we need to ensure we have automatic deployments enabled on the target schain
    - now we can bridge from the origin schain to the target schain
    - the bridging was successful, we can also check it out on the explorer - the balances are wrong because we're trying to bridge 6 decimal to 18 decimal token